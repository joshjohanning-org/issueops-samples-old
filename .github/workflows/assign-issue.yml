name: Assign issue with IssueOps
on:
  issues:
    types: [opened]
jobs:
  assign-issue:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' &&
      (github.event.action == 'opened') &&
      contains(github.event.issue.labels.*.name, 'assign-issue')
    permissions:
      contents: write
      issues: write

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - uses: stefanbuck/github-issue-parser@v3
      id: issue-parser

    - name: assign issue
      env: 
        GH_TOKEN: ${{ github.token }}
      run: |
        gh issue edit ${{ github.event.issue.number }} --add-assignee '${{ github.event.issue.user.login }}' -R ${{ github.repository }}

    - name: Assign Issue
      uses: actions/github-script@v6
      with:
        debug: true
        script: |
          await github.rest.issues.addAssignees({
            owner: '${{ github.REPOSITORY_OWNER }}',
            repo: '${{ github.event.repository.name }}',
            issue_number: ${{ github.event.issue.number }},
            assignees: '${{ github.event.issue.user.login }}'
          })

    - name: post comment
      uses: actions/github-script@v6
      with:
        script: |
          let commentBody
          commentBody = `ðŸš€ Thank you for the issue, @${{ github.actor }}!`
          await github.rest.issues.createComment({
            issue_number: ${{ github.event.issue.number }},
            owner: '${{ github.REPOSITORY_OWNER }}',
            repo: '${{ github.event.repository.name }}',
            body: commentBody.replace(/  +/g, '')
          })

    - name: close issue
      uses: actions/github-script@v6
      with:
        script: |
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
            });
